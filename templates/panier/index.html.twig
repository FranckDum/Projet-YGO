{% extends 'base.html.twig' %}

{% block title %}Mon Panier{% endblock %}
{% block h1 %}Mon Panier{% endblock %}

{% block body %}

<main class="container">
    {% if app.user %}

    <div class="table-responsive">
        <table class="table table-striped table-hover text-center">
            <thead class="table-dark">
                <tr>
                    <th>Image</th>
                    <th>Nom</th>
                    <th>Quantité</th>
                    <th>Prix</th>
                    <th>Total</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for produit in produits %}
                <tr>
                    <td><img class="imagePanier" src="/Images/ImgCartes/small/{{ produit.ygoId }}.jpg" alt="{{ produit.nom }}"></td>
                    <td>{{ produit.nom }}</td>
                    <td>
                        <span class="btn-quantite" data-id="{{ produit.id }}" data-action="decrement">-</span>
                        <span id="quantite{{ produit.id }}">{{ produit.quantite }}</span>
                        <span class="btn-quantite" data-id="{{ produit.id }}" data-action="increment">+</span>
                    </td>
                    <td>{{ produit.prix }}</td>
                    <td><span id="total{{ produit.id }}">{{ produit.total|number_format(2) }}</span></td>
                    <td>
                        {# <form class="d-inline-block" action="{{ path('app_panier_diminuer', {'id': produit.id}) }}" method="POST">
                            <button type="submit" class="btn btn-secondary">Diminuer</button>
                        </form>
                        <form class="d-inline-block" action="{{ path('app_panier_augmenter', {'id': produit.id}) }}" method="POST">
                            <button type="submit" class="btn btn-primary">Augmenter</button>
                        </form> #}
                        <form class="d-inline-block" action="{{ path('app_panier_supprimer', {'id': produit.id}) }}" method="POST">
                            <button type="submit" class="btn btn-danger">Supprimer</button>
                        </form>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
            <tfoot>
            </tfoot>
        </table>
    </div>

    <div class="mt-3 text-center">
        <h4>Total du Panier: <span id="montantTotal">{{ totalPanier|number_format(2) }}</span> €</h4>
        <a class="btn btn-success rounded-custom w-25" href="{{ path('app_stripe') }}">Payer</a>
    </div>
    {% else %}
        <h2>Veuillez vous connecter pour accéder au paiement</h2>
    {% endif %}
</main>

{% endblock %}

{% block javascripts %}
<script>
    // Définir la fonction sendDataToController à l'extérieur de la fonction DOMContentLoaded pour qu'elle soit accessible globalement
    function sendDataToController(id, action) {
        const formData = new FormData();
        formData.append('id', id);
        formData.append('action', action);

        // Désactiver les boutons pendant la mise à jour
        const incrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="increment"]`);
        const decrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="decrement"]`);
        incrementButton.disabled = true;
        decrementButton.disabled = true;

        fetch('/panier/adjust-quantity', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('La réponse du réseau n\'était pas correcte');
            }
            return response.json();
        })
        .then(data => {
            // Mettre à jour la quantité affichée dans le tableau HTML
            const quantityElement = document.querySelector(`#quantite${id}`);
            const totalElement = document.querySelector(`#total${id}`);
            const montantTotalElement = document.querySelector('#montantTotal');
            const incrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="increment"]`);
            const decrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="decrement"]`);

            if (quantityElement && totalElement && montantTotalElement) {
                // Limiter la quantité entre 1 et 10
                data.quantity = Math.min(Math.max(data.quantity, 1), 10);
                
                quantityElement.textContent = data.quantity;
                totalElement.textContent = data.total;
                montantTotalElement.textContent = data.montantTotal;

                // Afficher ou masquer le bouton d'incrémentation en fonction de la quantité
                if (data.quantity >= 10) {
                    incrementButton.style.display = 'none';
                } else {
                    incrementButton.style.display = 'inline-block';
                }

                // Afficher ou masquer le bouton de décrémentation en fonction de la quantité
                if (data.quantity <= 1) {
                    decrementButton.style.display = 'none';
                } else {
                    decrementButton.style.display = 'inline-block';
                }
            }
        })
        .catch(error => {
            console.error('Il y a eu un problème avec votre opération de récupération :', error);
        })
        .finally(() => {
            // Réactiver les boutons après la mise à jour
            incrementButton.disabled = false;
            decrementButton.disabled = false;
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Sélectionner tous les spans avec la classe 'btn-quantite'
        const spans = document.querySelectorAll('.btn-quantite');

        // Ajouter un écouteur d'événements clic à chaque span
        spans.forEach(function (span) {
            span.addEventListener('click', function () {
                // Récupérer l'ID du produit et l'action à partir des attributs data
                const id = this.getAttribute('data-id');
                const action = this.getAttribute('data-action');

                // Exécuter l'action appropriée en fonction de l'attribut data-action
                sendDataToController(id, action);
            });
        });
    });

</script>
{% endblock %}
