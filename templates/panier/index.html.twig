{% extends 'base.html.twig' %}

{% block title %}Mon Panier{% endblock %}
{% block h1 %}Mon Panier{% endblock %}

{% block body %}

<main class="container">
    <div id="flash-messages"></div>

    {% if produits|length > 0 %}
    <div id="cart-table" class="table-responsive">
        <table class="table table-striped table-hover text-center">
            <thead class="table-dark">
                <tr>
                    <th>Image</th>
                    <th>Nom</th>
                    <th>Quantité</th>
                    <th>Prix</th>
                    <th>Total</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for produit in produits %}
                <tr id="tr{{produit.id}}">
                    <td>
                        <a class"a" href="{{ path('detailProduit', {'id': produit.id}) }}">
                            <img class="imagePanier" src="/Images/ImgCartes/small/{{ produit.ygoId }}.jpg" alt="{{ produit.nom }}">
                        </a>
                    </td>
                    <td>{{ produit.nom }}</td>
                    <td>
                        <span class="btn-quantite decrement-btn {% if produit.quantite <= 1 %}d-none{% endif %}" data-id="{{ produit.id }}" data-action="decrement">-</span>
                        <span id="quantite{{ produit.id }}">{{ produit.quantite }}</span>
                        <span class="btn-quantite increment-btn {% if produit.quantite >= 10 %}d-none{% endif %}" data-id="{{ produit.id }}" data-action="increment">+</span>
                    </td>
                    <td>{{ produit.prix }}</td>
                    <td><span id="total{{ produit.id }}">{{ produit.total|number_format(2) }}</span></td>
                    <td>
                        <form class="d-inline-block delete-from-cart-form" data-product-id="{{ produit.id }}" action="{{ path('app_panier_supprimer', {'id': produit.id}) }}" method="POST">
                            <button type="submit" class="btn btn-danger">Supprimer</button>
                        </form>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
            <tfoot>
            </tfoot>
        </table>
    </div>
    <div id="empty-cart-msg" class="text-center text-danger" style="display: none;"><h2>Votre panier est vide</h2></div>
    <div class="mt-3 text-center" id="checkout-btn" style="display: none;">
        <a class="btn btn-success rounded-custom w-25" href="{{ path('app_validation_panier') }}">Valider la commande</a>
    </div>
    {% else %}
        <h2 class="text-center text-danger">Votre panier est vide</h2>
    {% endif %}

</main>

{% endblock %}


{% block javascripts %}
    <script>
        // Fonction pour vérifier si le panier est vide et afficher le message approprié
        function checkEmptyCart() {
            const cartTable = document.getElementById('cart-table');
            const emptyCartMsg = document.getElementById('empty-cart-msg');
            const checkoutBtn = document.getElementById('checkout-btn');

            if (cartTable && emptyCartMsg && checkoutBtn) {
                if (cartTable.querySelector('tbody').childElementCount === 0) {
                    cartTable.style.display = 'none';
                    emptyCartMsg.style.display = 'block';
                    checkoutBtn.style.display = 'none';
                } else {
                    cartTable.style.display = 'block';
                    emptyCartMsg.style.display = 'none';
                    checkoutBtn.style.display = 'block';
                }
            }
        }

        function updateCartIcon() {
            fetch('{{ path('get_cart_item_count') }}')
                .then(response => response.json())
                .then(data => {
                    const cartCountElement = document.getElementById('notifQuantitePanier');
                    if (cartCountElement) { // Vérifiez si l'élément existe avant de définir son contenu
                        if (data.itemCount > 0) {
                            cartCountElement.textContent = data.itemCount;
                        } else {
                            cartCountElement.textContent = '';
                        }
                    }
                })
                .catch(error => console.error('Erreur lors de la récupération du nombre d\'articles :', error));
        }

        function sendDataToController(id, action) {
            const formData = new FormData();
            formData.append('id', id);
            formData.append('action', action);

            fetch('/panier/adjust-quantity', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('La réponse du réseau n\'était pas correcte');
                }
                return response.json();
            })
            .then(data => {
                const quantityElement = document.querySelector(`#quantite${id}`);
                const totalElement = document.querySelector(`#total${id}`);
                const incrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="increment"]`);
                const decrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="decrement"]`);

                if (quantityElement && totalElement && incrementButton && decrementButton) {
                    quantityElement.textContent = data.quantity;
                    totalElement.textContent = data.total;

                    // Afficher ou cacher le bouton "-" en fonction de la quantité
                    if (data.quantity <= 1) {
                        decrementButton.style.display = 'none';
                    } else {
                        decrementButton.style.display = 'inline-block';
                    }

                    // Afficher ou cacher le bouton "+" en fonction de la quantité
                    if (data.quantity >= 10) {
                        incrementButton.style.display = 'none';
                    } else {
                        incrementButton.style.display = 'inline-block';
                    }
                } else {
                    console.error('Les éléments HTML ne sont pas trouvés.');
                }

                // Mettre à jour l'icône du panier
                updateCartIcon();
            })
            .catch(error => {
                console.error('Il y a eu un problème avec votre opération de récupération :', error);
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            checkEmptyCart();
            const spans = document.querySelectorAll('.btn-quantite');

            spans.forEach(function (span) {
                span.addEventListener('click', function () {
                    const id = this.getAttribute('data-id');
                    const action = this.getAttribute('data-action');

                    sendDataToController(id, action);
                });
            });

            const quantities = document.querySelectorAll('[id^="quantite"]');
            quantities.forEach(function (quantityElement) {
                const id = quantityElement.getAttribute('id').replace('quantite', '');
                const quantity = parseInt(quantityElement.textContent);
                const incrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="increment"]`);
                const decrementButton = document.querySelector(`.btn-quantite[data-id="${id}"][data-action="decrement"]`);

                if (quantity <= 1) {
                    decrementButton.style.display = 'none';
                } else {
                    decrementButton.style.display = 'inline-block';
                }

                if (quantity >= 10) {
                    incrementButton.style.display = 'none';
                } else {
                    incrementButton.style.display = 'inline-block';
                }
            });
        });

        $(document).ready(function() {
            $('.delete-from-cart-form').on('submit', function(event) {
                event.preventDefault();

                let formData = $(this).serialize();
                let productId = $(this).data('product-id');

                $.ajax({
                    method: 'POST',
                    url: "{{ path('app_panier_supprimer', {'id': '__ID__'}) }}".replace('__ID__', productId),
                    data: formData,
                    dataType: 'json',
                    success: function(response) {
                        if (response.success) {
                            $('#montantTotal').text(response.totalPanier);
                            $(`#tr${productId}`).remove();
                            $('#flash-messages').html('<div class="alert alert-success" role="alert">L\'article ' + response.articleName + ' a bien été retiré du panier.</div>');
                            checkEmptyCart();
                            updateCartIcon();
                        } else {
                            $('#flash-messages').html('<div class="alert alert-danger" role="alert">Erreur lors de la suppression de l\'article du panier.</div>');
                        }

                        setTimeout(function() {
                            $('.alert').fadeOut('slow');
                        }, 5000);
                    },
                    error: function(xhr, status, error) {
                        console.error('Erreur lors de la requête AJAX:', error);
                    }
                });
            });
        });
    </script>
{% endblock %}

